# -*- mode: ruby -*-
 # vi: set ft=ruby :

 # All Vagrant configuration is done below. The "2" in Vagrant.configure
 # configures the configuration version (we support older styles for
 # backwards compatibility). Please don't change it unless you know what

 # MULTI SERVER/VMs environment
 #
 Vagrant.configure("2") do |config|
    # creating are Ansible controller
      config.vm.define "controller" do |controller|

       controller.vm.box = "bento/ubuntu-18.04"

       controller.vm.hostname = 'controller'

       controller.vm.synced_folder "./sync_controller_controller", "/home/vagrant/sync_controller"

       controller.vm.synced_folder "./sync_controller_web", "/home/vagrant/sync_web"

       controller.vm.synced_folder "./sync_controller_db", "/home/vagrant/sync_db"

       controller.vm.provision "shell", path: "provision_controller.sh"

       controller.vm.network :private_network, ip: "192.168.33.12"

       # config.hostsupdater.aliases = ["development.controller"]

      end
    # creating first VM called web
      config.vm.define "web" do |web|

        web.vm.box = "bento/ubuntu-18.04"
       # downloading ubuntu 18.04 image

        web.vm.hostname = 'web'
        # assigning host name to the VM

        web.vm.provision "shell", path: "provision_web.sh"

        web.vm.network :private_network, ip: "192.168.33.10"
        #   assigning private IP

        #config.hostsupdater.aliases = ["development.web"]
        # creating a link called development.web so we can access web page with this link instread of an IP

      end

    # creating second VM called db
      config.vm.define "db" do |db|

        db.vm.box = "bento/ubuntu-18.04"

        db.vm.hostname = 'db'

        db.vm.network :private_network, ip: "192.168.33.11"

        db.vm.provision "shell", path: "provision_db.sh"

        #config.hostsupdater.aliases = ["development.db"]
      end


    end
